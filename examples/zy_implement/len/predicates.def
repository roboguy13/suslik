predicate base(loc x, loc y, set ys, int vv){
| y == 0 => {ys == {} && x == 0 ; emp}
| not (y == 0)   => { ys == {vy} ++ ys1 ; [y,2] ** y :-> vy ** (y + 1) :-> y1 ** inner(x, y1, ys1, vy, vv)}
}

predicate inner(loc x, loc y, set ys, int vy, int vv){
|    vy < 9 => {base(x, y, ys, vv)}
|    not (vy < 9) => {
    [x, 2] ** x :-> vy ** (x + 1) :-> xnxt ** base(xnxt, y, ys, vv)}
}

predicate sll(loc x, set s) {
|  x == 0        => { s == {} ; emp }
|  not (x == 0)  => { s == {v} ++ s1 ; [x, 2] ** x :-> v ** (x + 1) :-> nxt ** sll(nxt, s1) }
}