
predicate foldrose(loc x, set s, int acc, int z, pred p) {
|  x == null => { acc == z; emp }
|  not (x == null) => {
    p(acc, v, acc1) && s == {v} ++ s1 ; [x, 2] ** x :-> v ** (x + 1) :-> b ** foldbuds(b, s1, acc1, z, p) }
}
predicate foldbuds(loc x, set s, int acc, int z, pred p) {
|  x == null => { acc == z; emp }
|  not (x == null) => { p(acc, acc1, acc2) && s == s1 ++ s2 ;
[x, 2] ** x :-> r ** foldrose(r, s1, acc1, z, p) ** (x + 1) :-> nxt ** foldbuds(nxt, s2, acc2, z, p) }
}


predicate rose_tree(loc x, set s) {
|  x == 0        => { s =i {} ; emp }
|  not (x == 0)  => { s == {v} ++ s1 ; [x, 2] ** x :-> v ** (x + 1) :-> b ** buds(b, s1)}
}

predicate buds(loc x, set s) {
|  x == 0        => { s == {}; emp }
|  not (x == 0)  => { s == s1 ++ s2 ;
                      [x, 2] ** x :-> r ** rose_tree(r, s1) ** (x + 1) :-> nxt ** buds(nxt, s2) }
}