predicate leftList_base(loc x, loc y) {
| x == 0 => { y == 0 ; emp }
| not (x == 0) => { [x, 3] ** [y, 2] **
    x :-> v ** (x+1) :-> left ** (x+2) :-> right ** 
    y :-> v ** (y+1) :-> nxt **
    leftList_base(left, nxt)
  }
}

predicate sll(loc x) {
| x == 0 => { emp }
| not (x == 0) => { [x, 2] ** x :-> v ** (x+1) :-> nxt ** sll(nxt) }
}

predicate tree(loc x) {
| x == 0 => { emp }
| not (x == 0) => { [x, 3] ** x :-> v ** (x+1) :-> left ** (x+2) :-> right
    ** tree(left)
    ** tree(right)
  }
}

